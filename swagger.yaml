---
openapi: 3.0.0
info:
  title: BitFund Private API
  description: Institution / Broker API
  contact:
    name: Josh
    email: josh@bitfund.co.za
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/BitFund/bitfund-private-api/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: Organization
- name: Account
- name: Orders
paths:
  /organizations:
    get:
      tags:
      - Organization
      summary: Get all organizations
      operationId: getOrganizations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
  /organizations/{organization_id}:
    get:
      tags:
      - Organization
      summary: Find organization by ID
      description: Returns a single organization
      operationId: getOrganizationById
      parameters:
      - name: organization_id
        in: path
        description: ID of organization to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "404":
          description: Organization not found
          content: {}
  /organizations/{organization_id}/accounts:
    get:
      tags:
      - Account
      summary: Find accounts by organization ID
      description: Returns all accounts under this organization
      operationId: getAccountsByOrganizationById
      parameters:
      - name: organization_id
        in: path
        description: ID of organization
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        "404":
          description: Organization not found
          content: {}
  /accounts/{account_id}:
    get:
      tags:
      - Account
      summary: Find account by ID
      description: Returns a single account
      operationId: getAccountById
      parameters:
      - name: account_id
        in: path
        description: ID of account to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "404":
          description: Account not found
          content: {}
  /accounts/{account_id}/balances:
    get:
      tags:
      - Account
      summary: Find account balances by account ID
      description: Returns account balances
      operationId: getAccountBalancesByAccountId
      parameters:
      - name: account_id
        in: path
        description: ID of account
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Balance'
        "404":
          description: Account not found
          content: {}
  /orders:
    post:
      tags:
      - Order
      summary: Create a new order
      operationId: createOrder
      requestBody:
        description: Place a new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "422":
          description: Insufficient available balance
          content: {}
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /orders/{order_id}:
    get:
      tags:
      - Order
      summary: Find order by ID
      description: Returns a single order
      operationId: getOrderById
      parameters:
      - name: order_id
        in: path
        description: ID of order to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
        "404":
          description: Order not found
          content: {}
  /accounts/{account_id}/orders/open:
    get:
      tags:
      - Order
      summary: Find open account orders by account ID
      description: Returns account orders that are open
      operationId: getOpenOrdersByAccountId
      parameters:
      - name: account_id
        in: path
        description: ID of account
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus'
        "404":
          description: Order not found
          content: {}
  /accounts/{account_id}/orders/history:
    get:
      tags:
      - Order
      summary: Find orders by account ID
      description: Returns paginated account orders
      operationId: getOrdersByAccountId
      parameters:
      - name: account_id
        in: path
        description: ID of account
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: limit
        in: query
        description: number of records per page
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: number of records to offset for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus'
        "404":
          description: Order not found
          content: {}
components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
          description: E.g. Southern Africa Brokers
      description: An entity representing an institution such as a bank or brokerage that has clients for which it will trade crypto assets
    Account:
      type: object
      properties:
        id:
          type: string
        organization_id:
          type: string
        status:
          type: string
          enum:
          - awaiting_documentation
          - pending_verification
          - verification_failure
          - verified
        label:
          type: string
          description: E.g. Persons name / brokerages unique identifier / software providers unique identifier
      description: An entity representing a client of institution such as a bank or brokerage. Usually a person
    Balance:
      type: object
      properties:
        currency_code:
          type: string
        available:
          type: string
        reserved:
          type: string
        total:
          type: string
      description: An account balance of a certain asset/currency for an account
    Order:
      type: object
      properties:
        account_id:
          type: string
        order_type:
          type: string
          enum:
          - market
        side:
          type: string
          enum:
          - buy
          - sell
        amount:
          type: string
        pair:
          type: string
          enum:
          - BTCZAR
          - BTCETH
    OrderStatus:
      type: object
      properties:
        id:
          type: string
        account_id:
          type: string
        order_type:
          type: string
          enum:
          - market
        side:
          type: string
          enum:
          - buy
          - sell
        pair:
          type: string
          enum:
          - BTCZAR
          - BTCETH
        status:
          type: string
          enum:
          - placed
          - filled
          - partially_filled
          - cancelled
          - failed
        original_amount:
          type: string
        filled_amount:
          type: string
        average_price:
          type: string
          description: Only returned once order status is filled, cancelled or failed
        total:
          type: string
          description: Only returned once order status is filled, cancelled or failed
        total_fee:
          type: string
          description: Only returned once order status is filled, cancelled or failed
    inline_response_200:
      type: object
      properties:
        id:
          type: string
